#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jul 17, 2021 02:50:58 PM +07  platform: Windows NT

import sys

import googletrans
from googletrans import Translator
from PIL import Image, ImageTk
import speech_recognition
from gtts import gTTS
import os
import playsound as ps
from functools import partial

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import google_translate_gui_support

SELECT_LANGUAGES = list(map(lambda s: s.title(), list(googletrans.LANGUAGES.values())))

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    root.iconbitmap('Google-translate-icon.ico')
    root.state('zoomed')
    google_translate_gui_support.set_Tk_var()
    top = window (root)
    google_translate_gui_support.init(root, top)
    root.mainloop()

w = None
def create_window(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_window(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    google_translate_gui_support.set_Tk_var()
    top = window (w)
    google_translate_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_window():
    global w
    w.destroy()
    w = None

class window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1536x811+-6+0")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Google Dịch")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.img = ImageTk.PhotoImage(Image.open('images/background.png'))
        self.background = tk.Label(top, image=self.img)
        self.background.place(x=0, y=0)

        self.txtSrc = tk.Text(top)
        self.txtSrc.place(relx=0.052, rely=0.185, relheight=0.263
                , relwidth=0.879)
        self.txtSrc.configure(background="white")
        self.txtSrc.configure(font=("TkTextFont", 13))
        self.txtSrc.configure(foreground="black")
        self.txtSrc.configure(highlightbackground="#d9d9d9")
        self.txtSrc.configure(highlightcolor="black")
        self.txtSrc.configure(insertbackground="black")
        self.txtSrc.configure(selectbackground="blue")
        self.txtSrc.configure(selectforeground="white")
        self.txtSrc.configure(wrap="word")
        self.txtSrc.bind('<KeyRelease>', self.TextSrcChanged)
        self.txtSrc.focus_set()

        self.lbTranslator = tk.Label(top)
        self.lbTranslator.place(relx=0.391, rely=0.037, height=39, width=283)
        self.lbTranslator.configure(activebackground="#f9f9f9")
        self.lbTranslator.configure(activeforeground="black")
        self.lbTranslator.configure(background="#051628")
        self.lbTranslator.configure(disabledforeground="#a3a3a3")
        self.lbTranslator.configure(font="-family {Transformers Movie} -size 24 -weight bold")
        self.lbTranslator.configure(foreground="#ffffff")
        self.lbTranslator.configure(highlightbackground="#d9d9d9")
        self.lbTranslator.configure(highlightcolor="black")
        self.lbTranslator.configure(text='''Translator''')

        self.txtDest = tk.Text(top)
        self.txtDest.place(relx=0.052, rely=0.53, relheight=0.263
                , relwidth=0.879)
        self.txtDest.configure(background="#c0c0c0")
        self.txtDest.configure(font=("TkTextFont", 13))
        self.txtDest.configure(foreground="black")
        self.txtDest.configure(highlightbackground="#d9d9d9")
        self.txtDest.configure(highlightcolor="black")
        self.txtDest.configure(insertbackground="black")
        self.txtDest.configure(selectbackground="blue")
        self.txtDest.configure(selectforeground="white")
        self.txtDest.configure(wrap="word")
        self.txtDest.bind("<Key>", lambda e: window.ctrlEvent(e))

        self.cbSelectLangSrc = ttk.Combobox(top)
        self.cbSelectLangSrc.place(relx=0.82, rely=0.148, relheight=0.027
                , relwidth=0.11)
        self.cbSelectLangSrc.configure(textvariable=google_translate_gui_support.cbSrc)
        self.cbSelectLangSrc.configure(background="#ffffff")
        self.cbSelectLangSrc.configure(takefocus="")

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.742, rely=0.148, height=22, width=106)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#011224")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#ffffff")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Select Language:''')

        self.btListenSrc = tk.Button(top)
        self.btListenSrc.place(relx=0.052, rely=0.136, height=34, width=97)
        self.btListenSrc.configure(activebackground="#ececec")
        self.btListenSrc.configure(activeforeground="#000000")
        self.btListenSrc.configure(background="#000000")
        self.btListenSrc.configure(disabledforeground="#a3a3a3")
        self.btListenSrc.configure(foreground="#ffffff")
        self.btListenSrc.configure(highlightbackground="#d9d9d9")
        self.btListenSrc.configure(highlightcolor="black")
        self.btListenSrc.configure(pady="0")
        self.btListenSrc.configure(text='''Nghe''')

        self.lbCredit = tk.Label(top)
        self.lbCredit.place(relx=0.397, rely=0.863, height=31, width=273)
        self.lbCredit.configure(activebackground="#f9f9f9")
        self.lbCredit.configure(activeforeground="black")
        self.lbCredit.configure(background="#02315D")
        self.lbCredit.configure(disabledforeground="#a3a3a3")
        self.lbCredit.configure(font="-family {Segoe UI} -size 15")
        self.lbCredit.configure(foreground="#ffffff")
        self.lbCredit.configure(highlightbackground="#d9d9d9")
        self.lbCredit.configure(highlightcolor="black")
        self.lbCredit.configure(text='''Created by Phu Phuc''')

        self.Label2_1 = tk.Label(top)
        self.Label2_1.place(relx=0.742, rely=0.493, height=22, width=106)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#001830")
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(foreground="#ffffff")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''Select Language:''')

        self.cbSelectLangDest = ttk.Combobox(top)
        self.cbSelectLangDest.place(relx=0.82, rely=0.493, relheight=0.027
                , relwidth=0.11)
        self.cbSelectLangDest.configure(textvariable=google_translate_gui_support.cbDest)
        self.cbSelectLangDest.configure(takefocus="")
        self.cbSelectLangDest.configure(state='readonly')
        self.cbSelectLangDest.configure(value=SELECT_LANGUAGES)
        self.cbSelectLangDest.set('Vietnamese')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.btListenDest = tk.Button(top)
        self.btListenDest.place(relx=0.052, rely=0.481, height=34, width=97)
        self.btListenDest.configure(activebackground="#ececec")
        self.btListenDest.configure(activeforeground="#000000")
        self.btListenDest.configure(background="#000000")
        self.btListenDest.configure(disabledforeground="#a3a3a3")
        self.btListenDest.configure(foreground="#ffffff")
        self.btListenDest.configure(highlightbackground="#d9d9d9")
        self.btListenDest.configure(highlightcolor="black")
        self.btListenDest.configure(pady="0")
        self.btListenDest.configure(text='''Nghe''')

        self.btSpeakSrc = tk.Button(top)
        self.btSpeakSrc.place(relx=0.124, rely=0.136, height=34, width=97)
        self.btSpeakSrc.configure(activebackground="#ececec")
        self.btSpeakSrc.configure(activeforeground="#000000")
        self.btSpeakSrc.configure(background="#000000")
        self.btSpeakSrc.configure(disabledforeground="#a3a3a3")
        self.btSpeakSrc.configure(foreground="#ffffff")
        self.btSpeakSrc.configure(highlightbackground="#d9d9d9")
        self.btSpeakSrc.configure(highlightcolor="black")
        self.btSpeakSrc.configure(pady="0")
        self.btSpeakSrc.configure(text='''Nói''')

        self.btCopySrc = tk.Button(top)
        self.btCopySrc.place(relx=0.28, rely=0.136, height=34, width=97)
        self.btCopySrc.configure(activebackground="#ececec")
        self.btCopySrc.configure(activeforeground="#000000")
        self.btCopySrc.configure(background="#000000")
        self.btCopySrc.configure(disabledforeground="#a3a3a3")
        self.btCopySrc.configure(foreground="#ffffff")
        self.btCopySrc.configure(highlightbackground="#d9d9d9")
        self.btCopySrc.configure(highlightcolor="black")
        self.btCopySrc.configure(pady="0")
        self.btCopySrc.configure(text='''Sao chép''')

        self.btPasteSrc = tk.Button(top)
        self.btPasteSrc.place(relx=0.352, rely=0.136, height=34, width=97)
        self.btPasteSrc.configure(activebackground="#ececec")
        self.btPasteSrc.configure(activeforeground="#000000")
        self.btPasteSrc.configure(background="#000000")
        self.btPasteSrc.configure(disabledforeground="#a3a3a3")
        self.btPasteSrc.configure(foreground="#ffffff")
        self.btPasteSrc.configure(highlightbackground="#d9d9d9")
        self.btPasteSrc.configure(highlightcolor="black")
        self.btPasteSrc.configure(pady="0")
        self.btPasteSrc.configure(text='''Dán''')

        self.btLanguageSwap = tk.Button(top)
        self.btLanguageSwap.place(relx=0.625, rely=0.136, height=34, width=157)
        self.btLanguageSwap.configure(activebackground="#ececec")
        self.btLanguageSwap.configure(activeforeground="#000000")
        self.btLanguageSwap.configure(background="#000000")
        self.btLanguageSwap.configure(disabledforeground="#a3a3a3")
        self.btLanguageSwap.configure(foreground="#ffffff")
        self.btLanguageSwap.configure(highlightbackground="#d9d9d9")
        self.btLanguageSwap.configure(highlightcolor="black")
        self.btLanguageSwap.configure(pady="0")
        self.btLanguageSwap.configure(text='''Hoán đổi ngôn ngữ''')

        self.btCopyDest = tk.Button(top)
        self.btCopyDest.place(relx=0.28, rely=0.481, height=34, width=97)
        self.btCopyDest.configure(activebackground="#ececec")
        self.btCopyDest.configure(activeforeground="#000000")
        self.btCopyDest.configure(background="#000000")
        self.btCopyDest.configure(disabledforeground="#a3a3a3")
        self.btCopyDest.configure(foreground="#ffffff")
        self.btCopyDest.configure(highlightbackground="#d9d9d9")
        self.btCopyDest.configure(highlightcolor="black")
        self.btCopyDest.configure(pady="0")
        self.btCopyDest.configure(text='''Sao chép''')

        self.btRemoveSrc = tk.Button(top)
        self.btRemoveSrc.place(relx=0.423, rely=0.136, height=34, width=97)
        self.btRemoveSrc.configure(activebackground="#ececec")
        self.btRemoveSrc.configure(activeforeground="#000000")
        self.btRemoveSrc.configure(background="#000000")
        self.btRemoveSrc.configure(disabledforeground="#a3a3a3")
        self.btRemoveSrc.configure(foreground="#ffffff")
        self.btRemoveSrc.configure(highlightbackground="#d9d9d9")
        self.btRemoveSrc.configure(highlightcolor="black")
        self.btRemoveSrc.configure(pady="0")
        self.btRemoveSrc.configure(text='''Xóa''')

        self.btTranslate = tk.Button(top)
        self.btTranslate.place(relx=0.495, rely=0.136, height=34, width=97)
        self.btTranslate.configure(activebackground="#ececec")
        self.btTranslate.configure(activeforeground="#000000")
        self.btTranslate.configure(background="#000000")
        self.btTranslate.configure(disabledforeground="#a3a3a3")
        self.btTranslate.configure(foreground="#ffffff")
        self.btTranslate.configure(highlightbackground="#d9d9d9")
        self.btTranslate.configure(highlightcolor="black")
        self.btTranslate.configure(pady="0")
        self.btTranslate.configure(text='''Dịch''')

        self.translator = Translator()
        self.ear = speech_recognition.Recognizer()
        self.mouth = gTTS(text='...')
        self.button_images = []
        self.config_button(self.btListenSrc, 'transparent-speaker-icon-11.jpg', partial(self.listen, self.txtSrc, self.cbSelectLangSrc))
        self.config_button(self.btListenDest, 'transparent-speaker-icon-11.jpg', partial(self.listen, self.txtDest, self.cbSelectLangDest))
        self.config_button(self.btSpeakSrc, 'pngaaa.com-926093.png', self.speak)
        self.config_button(self.btCopySrc, 'copy-24-512.png', partial(self.copy_to_clipboard, self.txtSrc))
        self.config_button(self.btCopyDest, 'copy-24-512.png', partial(self.copy_to_clipboard, self.txtDest))
        self.config_button(self.btPasteSrc, 'pngfind.com-edit-icon.png', self.paste_from_clipboard, 40, 40)
        self.config_button(self.btRemoveSrc, 'delete+remove+icon.png', self.remove)
        self.config_button(self.btTranslate, 'Google-translate-icon-design-on-transparent-background-PNG.png', self.translate, 100, 100)
        self.config_button(self.btLanguageSwap, 'swap-icon-15.jpg', self.swap_languages)

        self.config_combobox(self.cbSelectLangSrc, 'English')
        self.config_combobox(self.cbSelectLangDest, 'Vietnamese')

    @staticmethod
    def ctrlEvent(event):
        if(12==event.state and event.keysym=='c' ):
            return
        else:
            return "break"

    def config_combobox(self, cb, default_language):
        cb.configure(state='readonly')
        cb.configure(value=SELECT_LANGUAGES)
        cb.set(default_language)

    def config_button(self, button, img_path, command, x=20, y=20):
        img = tk.PhotoImage(file=f'images/{img_path}').subsample(x, y)
        self.button_images.append(img)
        button.configure(image=img)
        button.configure(compound='left')
        button.configure(command=command)

    def translate(self):
        txt_input = self.txtSrc.get(1.0, tk.END)
        self.txtDest.delete(1.0, tk.END)
        if txt_input.strip() == '':
            return
        # Kiểm tra ngôn ngữ cần dịch
        src_lang = self.cbSelectLangSrc.get().lower()
        dest_lang= self.cbSelectLangDest.get().lower()
        txt_output = self.translator.translate(txt_input, src=src_lang, dest=dest_lang).text.replace('\n ', '\n')
        self.txtDest.insert(1.0, txt_output)

    def TextSrcChanged(self, event):
        if event.char != '\r':
            return
        self.translate()

    @staticmethod
    def get_language_code(language):
        for key, value in googletrans.LANGUAGES.items():
            if value == language:
                return key

    # Nghe
    def listen(self, txt, cb):
        mes = txt.get(1.0, tk.END)
        if mes.strip() == '':
            return
        self.mouth.text = mes
        self.mouth.lang = self.get_language_code(cb.get().lower())
        file_name = 'google_translate.mp3'
        self.mouth.save(file_name)
        ps.playsound(file_name, block=False)
        os.remove(file_name)

    # Nói
    def speak(self):
        import traceback
        # self.txtSrc.delete(1.0, tk.END)
        # self.txtDest.delete(1.0, tk.END)
        # self.txtSrc.insert(1.0, self.translator.translate('Please say something...', src='en', dest=self.cbSelectLangSrc.get()).text)
        lang = self.get_language_code(self.cbSelectLangSrc.get().lower())
        with speech_recognition.Microphone() as mic:
            self.ear.adjust_for_ambient_noise(mic, duration=0.5)
            audio = self.ear.listen(mic)
        try:
            you = self.ear.recognize_google(audio, language=lang)
        except:
            you = ''
        self.txtSrc.delete(1.0, tk.END)
        self.txtSrc.insert(1.0, you)
        self.translate()

    # Sao chép
    def copy_to_clipboard(self, txt):
        self.top.clipboard_clear()
        self.top.clipboard_append(txt.get(1.0, tk.END))

    # Dán
    def paste_from_clipboard(self):
        self.txtSrc.delete(1.0, tk.END)
        self.txtSrc.insert(1.0, self.top.clipboard_get())
        self.translate()

    # Xóa
    def remove(self):
        self.txtSrc.delete(1.0, tk.END)
        self.translate()

    # Hoán đổi ngôn ngữ
    def swap_languages(self):
        src_lang = self.cbSelectLangSrc.get()
        self.cbSelectLangSrc.set(self.cbSelectLangDest.get())
        self.cbSelectLangDest.set(src_lang)

        dest_txt = self.txtDest.get(1.0, tk.END)
        self.txtSrc.delete(1.0, tk.END)
        self.txtDest.delete(1.0, tk.END)
        self.txtSrc.insert(1.0, dest_txt)

        self.translate()
    

if __name__ == '__main__':
    vp_start_gui()